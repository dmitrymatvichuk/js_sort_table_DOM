{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCEA,IAAM,EAAU,SAAS,aAAa,CAAC,YACjC,EAAO,SAAS,aAAa,CAAC,SAC9B,EAAW,EAAK,gBAAgB,CAAC,MAEjC,EAAY,SAAC,CAAA,CAAK,CAAxB,EACE,IAAM,EAAa,A,C,A,C,S,C,E,G,M,O,C,G,O,E,E,C,EAAI,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,EAAA,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,G,EAAA,I,A,W,M,A,U,wI,G,EAAU,IAAI,CAAC,GAEtC,EAAS,OAAO,CAAC,SAAA,CAAjB,EAAyB,OAAA,EAAK,UAAU,CAAC,WAAW,CAAC,E,GACrD,EAAW,OAAO,CAAC,SAAA,CAAnB,EAA2B,OAAA,EAAK,WAAW,CAAC,E,EAC9C,EAEA,EAAQ,gBAAgB,CAAC,QAAS,SAAC,CAAnC,EACE,IACI,EADE,EAAa,EAAE,MAAM,CAAC,WAAW,CAAC,WAAW,GAGnD,OAAQ,GACN,IAAK,OACH,EAAa,SAAC,CAAA,CAAG,CAAjB,EACE,OAAA,EAAE,KAAK,CAAC,EAAE,CAAC,WAAW,CAAC,aAAa,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,WAAW,C,EAC7D,KACF,KAAK,WACH,EAAa,SAAC,CAAA,CAAG,CAAjB,EACE,OAAA,EAAE,KAAK,CAAC,EAAE,CAAC,WAAW,CAAC,aAAa,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,WAAW,C,EAC7D,KACF,KAAK,MACH,EAAa,SAAC,CAAA,CAAG,CAAjB,EACE,MAAA,CAAE,EAAE,KAAK,CAAC,EAAE,CAAC,WAAW,CAAI,CAAE,EAAE,KAAK,CAAC,EAAE,CAAC,WAAW,A,EACtD,KACF,KAAK,SACH,EAAa,SAAC,CAAA,CAAG,CAAjB,EAME,OAAO,AALS,SACd,EAAE,KAAK,CAAC,EAAE,CAAC,WAAW,CAAC,OAAO,CAAC,SAAU,IAAK,IAChC,SACd,EAAE,KAAK,CAAC,EAAE,CAAC,WAAW,CAAC,OAAO,CAAC,SAAU,IAAK,GAGlD,EACA,KACF,SACE,MACJ,CAEA,EAAU,EAAY,EACxB,E,4D","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar headRow = document.querySelector(\"thead tr\");\nvar body = document.querySelector(\"tbody\");\nvar bodyRows = body.querySelectorAll(\"tr\");\nvar sortTable = function(key, comparator) {\n    var sortedRows = _to_consumable_array(bodyRows).sort(comparator);\n    bodyRows.forEach(function(node) {\n        return node.parentNode.removeChild(node);\n    });\n    sortedRows.forEach(function(node) {\n        return body.appendChild(node);\n    });\n};\nheadRow.addEventListener(\"click\", function(e) {\n    var columnName = e.target.textContent.toLowerCase();\n    var comparator;\n    switch(columnName){\n        case \"name\":\n            comparator = function(a, b) {\n                return a.cells[0].textContent.localeCompare(b.cells[0].textContent);\n            };\n            break;\n        case \"position\":\n            comparator = function(a, b) {\n                return a.cells[1].textContent.localeCompare(b.cells[1].textContent);\n            };\n            break;\n        case \"age\":\n            comparator = function(a, b) {\n                return +a.cells[2].textContent - +b.cells[2].textContent;\n            };\n            break;\n        case \"salary\":\n            comparator = function(a, b) {\n                var aSalary = parseInt(a.cells[3].textContent.replace(/[^\\d]/g, \"\"), 10);\n                var bSalary = parseInt(b.cells[3].textContent.replace(/[^\\d]/g, \"\"), 10);\n                return aSalary - bSalary;\n            };\n            break;\n        default:\n            return;\n    }\n    sortTable(columnName, comparator);\n});\n\n//# sourceMappingURL=index.9698e6eb.js.map\n","'use strict';\n\nconst headRow = document.querySelector('thead tr');\nconst body = document.querySelector('tbody');\nconst bodyRows = body.querySelectorAll('tr');\n\nconst sortTable = (key, comparator) => {\n  const sortedRows = [...bodyRows].sort(comparator);\n\n  bodyRows.forEach(node => node.parentNode.removeChild(node));\n  sortedRows.forEach(node => body.appendChild(node));\n};\n\nheadRow.addEventListener('click', (e) => {\n  const columnName = e.target.textContent.toLowerCase();\n  let comparator;\n\n  switch (columnName) {\n    case 'name':\n      comparator = (a, b) =>\n        a.cells[0].textContent.localeCompare(b.cells[0].textContent);\n      break;\n    case 'position':\n      comparator = (a, b) =>\n        a.cells[1].textContent.localeCompare(b.cells[1].textContent);\n      break;\n    case 'age':\n      comparator = (a, b) =>\n        +(a.cells[2].textContent) - +(b.cells[2].textContent);\n      break;\n    case 'salary':\n      comparator = (a, b) => {\n        const aSalary = parseInt(\n          a.cells[3].textContent.replace(/[^\\d]/g, ''), 10);\n        const bSalary = parseInt(\n          b.cells[3].textContent.replace(/[^\\d]/g, ''), 10);\n\n        return aSalary - bSalary;\n      };\n      break;\n    default:\n      return;\n  }\n\n  sortTable(columnName, comparator);\n});\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","headRow","document","querySelector","body","bodyRows","querySelectorAll","sortTable","key","comparator","sortedRows","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","sort","forEach","node","parentNode","removeChild","appendChild","addEventListener","e","columnName","target","textContent","toLowerCase","a","b","cells","localeCompare","aSalary","parseInt","replace"],"version":3,"file":"index.9698e6eb.js.map"}